{"version":3,"sources":["components/container/Pagination.js","components/container/products/Laptops.js"],"names":["Pagination","props","className","currentPage","to","aria-label","id","onClick","e","goToPrevOrNextPage","aria-hidden","pageNumbers","map","number","key","paginate","length","Laptops","useEffect","window","scrollTo","useState","setCurrentPage","postsPerPage","indexOfLastPost","indexOfFirstPost","i","Math","ceil","laptops","push","useTranslation","t","aria-current","value","data","filter","dataItem","category","slice","pageNumber","preventDefault","currentTarget"],"mappings":"8GAAA,6DAGe,SAASA,EAAWC,GACjC,OACE,6BACE,wBAAIC,UAAU,mBACZ,wBAAIA,UAAS,oBAAqC,IAAtBD,EAAME,YAAoB,WAAa,KACjE,kBAAC,IAAD,CAAMC,GAAG,iBACHF,UAAU,YACVG,aAAW,WACXC,GAAG,WACHC,QAAS,SAAAC,GAAC,OAAIP,EAAMQ,mBAAmBD,EAAGP,EAAME,eACpD,0BAAMO,cAAY,QAAlB,QACA,0BAAMR,UAAU,WAAhB,cAIFD,EAAMU,YAAYC,KAAI,SAAAC,GAAM,OAC1B,wBAAIC,IAAKD,EAAQX,UAAS,oBAAeW,IAAWZ,EAAME,YAAc,SAAW,KACjF,kBAAC,IAAD,CAAMC,GAAG,iBAAiBF,UAAU,YAAYK,QAAS,SAAAC,GAAC,OAAIP,EAAMc,SAASP,EAAGK,KAC7EA,OAKT,wBAAIX,UAAS,oBAAeD,EAAME,cAAgBF,EAAMU,YAAYK,OAAS,WAAa,KACxF,kBAAC,IAAD,CAAMZ,GAAG,iBACHF,UAAU,YACVG,aAAW,OACXC,GAAG,OACHC,QAAS,SAAAC,GAAC,OAAIP,EAAMQ,mBAAmBD,EAAGP,EAAME,eACpD,0BAAMO,cAAY,QAAlB,QACA,0BAAMR,UAAU,WAAhB,c,iKCvBG,SAASe,IACtBC,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,IAQH,IAXgC,MAKQC,mBAAS,GALjB,mBAKxBlB,EALwB,KAKXmB,EALW,OAMPD,mBAAS,GAA1BE,EANwB,oBAO1BC,EAAkBrB,EAAcoB,EAChCE,EAAmBD,EAAkBD,EACrCZ,EAAc,GAEXe,EAAI,EAAGA,GAAKC,KAAKC,KAAKC,IAAQb,OAASO,GAAeG,IAC7Df,EAAYmB,KAAKJ,GAZa,MAelBK,cAANC,EAfwB,oBAiChC,OACE,kBAAC,IAAD,CAAa9B,UAAU,6CACrB,yBAAKG,aAAW,cACd,wBAAIH,UAAU,cACZ,wBAAIA,UAAU,mBAAkB,kBAAC,IAAD,CAAME,GAAG,KAAK4B,EAAE,oBAChD,wBAAI9B,UAAU,yBAAyB+B,eAAa,QAAQD,EAAE,YAGlE,kBAAC,IAAD,KACE,kBAAC,IAAD,MAEI,SAAAE,GACE,OAAOA,EAAMC,KACVC,QAAQ,SAAAC,GAAQ,MAA0B,YAAtBA,EAASC,YAC7BC,MAAOd,EAAkBD,GACzBZ,KAAK,SAAAyB,GACJ,OAAO,kBAAC,IAAD,CAAMvB,IAAKuB,EAAS/B,GAAI+B,SAAUA,EAAUH,MAAOA,WAMtE,kBAAC,IAAD,CAAYX,aAAcA,EACdpB,YAAaA,EACbQ,YAAaA,EACbI,SAzChB,SAAkBP,EAAGgC,GACnBhC,EAAEiC,iBACFtB,OAAOC,SAAS,EAAG,IACnBE,EAAekB,IAuCD/B,mBApChB,SAA4BD,EAAGgC,GAC7BhC,EAAEiC,iBACFtB,OAAOC,SAAS,EAAG,IACQ,aAAvBZ,EAAEkC,cAAcpC,GAClBgB,EAAekB,EAAa,GACI,SAAvBhC,EAAEkC,cAAcpC,IACzBgB,EAAekB,EAAa","file":"static/js/5.d755f199.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Pagination(props) {\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination mt-3\">\r\n        <li className={`page-item ${props.currentPage === 1 ? \"disabled\" : \"\"}`}>\r\n          <Link to=\"/mobile_phones\" \r\n                className=\"page-link\" \r\n                aria-label=\"Previous\" \r\n                id=\"Previous\"\r\n                onClick={e => props.goToPrevOrNextPage(e, props.currentPage)}>\r\n            <span aria-hidden=\"true\">&laquo;</span>\r\n            <span className=\"sr-only\">Previous</span>\r\n          </Link>\r\n        </li>\r\n        {\r\n          props.pageNumbers.map(number => (\r\n            <li key={number} className={`page-item ${number === props.currentPage ? \"active\" : \"\"}`}>\r\n              <Link to=\"/mobile_phones\" className=\"page-link\" onClick={e => props.paginate(e, number)}>\r\n                {number}\r\n              </Link>\r\n            </li>\r\n          ))\r\n        }\r\n        <li className={`page-item ${props.currentPage === props.pageNumbers.length ? \"disabled\" : \"\"}`}>\r\n          <Link to=\"/mobile_phones\" \r\n                className=\"page-link\" \r\n                aria-label=\"Next\"\r\n                id=\"Next\"\r\n                onClick={e => props.goToPrevOrNextPage(e, props.currentPage)}>\r\n            <span aria-hidden=\"true\">&raquo;</span>\r\n            <span className=\"sr-only\">Next</span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { DivProducts, DivProductList } from '../../styles'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { ContextConsumer } from '../../../context'\r\nimport { laptops } from '../../../components/data'\r\n\r\nimport Item from './Item'\r\nimport Pagination from '../Pagination'\r\n\r\nexport default function Laptops() {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  const [ currentPage, setCurrentPage ] = useState(1)\r\n  const [ postsPerPage ] = useState(8)\r\n  const indexOfLastPost = currentPage * postsPerPage\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage\r\n  const pageNumbers = []\r\n\r\n  for (let i = 1; i <= Math.ceil(laptops.length / postsPerPage); i++) {\r\n    pageNumbers.push(i)\r\n  }\r\n\r\n  const [ t ] = useTranslation()\r\n  \r\n  function paginate(e, pageNumber) {\r\n    e.preventDefault()\r\n    window.scrollTo(0, 58)\r\n    setCurrentPage(pageNumber)\r\n  }\r\n\r\n  function goToPrevOrNextPage(e, pageNumber) {\r\n    e.preventDefault()\r\n    window.scrollTo(0, 58)\r\n    if (e.currentTarget.id === \"Previous\") {\r\n      setCurrentPage(pageNumber - 1)\r\n    } else if (e.currentTarget.id === \"Next\") {\r\n      setCurrentPage(pageNumber + 1)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DivProducts className=\"d-flex flex-column justify-content-center\">\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\"><Link to=\"/\">{t('MobilePhones|1')}</Link></li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">{t('Nav|2')}</li>\r\n        </ol>\r\n      </nav>\r\n      <DivProductList>\r\n        <ContextConsumer>\r\n          {\r\n            value => {\r\n              return value.data\r\n                .filter( dataItem => dataItem.category === 'Laptops' )\r\n                .slice( indexOfFirstPost, indexOfLastPost )\r\n                .map( dataItem => {\r\n                  return <Item key={dataItem.id} dataItem={dataItem} value={value} />\r\n                })\r\n            }\r\n          }\r\n        </ContextConsumer>\r\n      </DivProductList>\r\n      <Pagination postsPerPage={postsPerPage} \r\n                  currentPage={currentPage}\r\n                  pageNumbers={pageNumbers}\r\n                  paginate={paginate} \r\n                  goToPrevOrNextPage={goToPrevOrNextPage} />\r\n    </DivProducts>\r\n  )\r\n}\r\n"],"sourceRoot":""}