{"version":3,"sources":["components/container/carousel/Timer.js","components/container/carousel/MobilePhonesDiscount.js"],"names":["Timer","useState","Date","getTime","currentTime","setCurrentTime","countdown","setCountdown","deadline","useTranslation","t","timeDifference","useEffect","clearInterval","setInterval","Math","sign","className","floor","MobilePhonesDiscount","src","require","alt","value","data","filter","dataItem","category","hasDiscount","map","key","id"],"mappings":"kLAGe,SAASA,IAAS,IAAD,EACUC,oBAAS,IAAIC,MAAOC,WAD9B,mBACtBC,EADsB,KACTC,EADS,OAEMJ,mBAAS,MAFf,mBAEtBK,EAFsB,KAEXC,EAFW,KAGxBC,EAAW,IAAIN,KAAK,KAAM,EAAG,GAAGC,UAHR,EAKhBM,cAANC,EALsB,oBAO1BC,EAAiBH,EAAWJ,EAsBhC,OApBAQ,qBAAU,WACR,OAAIR,IAAgBI,EAGXK,cAAcP,IAFrBC,EAAaO,aAAa,WAe5BT,GAAe,IAAIH,MAAOC,aAfiB,MAKpC,WACLU,cAAcP,OAEf,KAEgC,IAA/BS,KAAKC,KAAKL,IACZE,cAAcP,GAQd,4BACE,0BAAMW,UAAU,gDACd,8BAAOP,EAAE,YACT,+BAEmC,IAA/BK,KAAKC,KAAKL,GAAV,UACMI,KAAKG,MAAMP,EAAc,OAD/B,gCAEMI,KAAKG,MAAOP,EAAc,MAAf,MAFjB,gCAGMI,KAAKG,MAAOP,EAAc,KAAf,KAHjB,gCAIMI,KAAKG,MAAOP,EAAc,IAAkB,MAChD,qB,iCC3Cd,mGAOe,SAASQ,IACtB,OACE,oCACE,kBAAC,IAAD,CAAcF,UAAU,sBACtB,yBAAKG,IAAKC,EAAQ,KAAkCC,IAAI,KACxD,6BACA,kBAAC,IAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,MAEI,SAAAC,GACE,OAAOA,EAAMC,KACVC,QAAQ,SAAAC,GAAQ,MAA0B,kBAAtBA,EAASC,WAAyD,IAAzBD,EAASE,eACtEC,KAAK,SAAAH,GACJ,OAAO,kBAAC,IAAD,CAAMI,IAAKJ,EAASK,GAAIL,SAAUA,EAAUH,MAAOA","file":"static/js/9.fce1e26f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nexport default function Timer() {\r\n  const [ currentTime, setCurrentTime ] = useState(new Date().getTime())  \r\n  const [ countdown, setCountdown ] = useState(null)\r\n  const deadline = new Date(2021, 0, 0).getTime()\r\n\r\n  const [ t ] = useTranslation()\r\n\r\n  let timeDifference = deadline - currentTime\r\n\r\n  useEffect(() => {\r\n    if (currentTime !== deadline) {\r\n      setCountdown(setInterval( () => timer(), 1000 ))\r\n    } else {\r\n      return clearInterval(countdown)\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(countdown)\r\n    }\r\n  }, [])\r\n\r\n  if (Math.sign(timeDifference) === -1) { \r\n    clearInterval(countdown)\r\n  }\r\n\r\n  function timer() {\r\n    setCurrentTime(new Date().getTime())  \r\n  }\r\n\r\n  return (\r\n    <h1>\r\n      <span className=\"d-inline-flex flex-column align-items-center\"> \r\n        <span>{t('Timer|1')}</span>\r\n        <span>\r\n          { \r\n            Math.sign(timeDifference) !== -1\r\n            ? (`${Math.floor(timeDifference / (1000 * 3600 * 24))} : \r\n                ${Math.floor((timeDifference % (1000 * 3600 * 24)) / (1000 * 3600))} : \r\n                ${Math.floor((timeDifference % (1000 * 3600)) / (1000 * 60))} : \r\n                ${Math.floor((timeDifference % (1000 * 60)) / 1000)}`)\r\n            : \"0 : 0 : 0 : 0\"\r\n          }\r\n        </span>\r\n      </span>\r\n    </h1>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { DivCountdown, DivDiscountList } from '../../styles'\r\nimport { ContextConsumer } from '../../../context'\r\n\r\nimport Timer from './Timer'\r\nimport Item from '../products/Item'\r\n\r\nexport default function MobilePhonesDiscount() {\r\n  return (\r\n    <>\r\n      <DivCountdown className=\"d-flex flex-column\">\r\n        <img src={require('../../../img/carousel/01.webp')} alt=\"\" />\r\n        <hr />\r\n        <Timer />\r\n      </DivCountdown>\r\n      <DivDiscountList>\r\n        <ContextConsumer>\r\n          {\r\n            value => {\r\n              return value.data\r\n                .filter( dataItem => dataItem.category === 'Mobile Phones' && dataItem.hasDiscount === true )\r\n                .map( dataItem => {\r\n                  return <Item key={dataItem.id} dataItem={dataItem} value={value} />\r\n                })\r\n            }\r\n          }\r\n        </ContextConsumer>\r\n      </DivDiscountList>\r\n    </>\r\n  )\r\n}\r\n"],"sourceRoot":""}