{"version":3,"sources":["components/authentication/LogIn.js","components/authentication/Registration.js","components/Authentication.js"],"names":["LogIn","props","useTranslation","t","className","name","onSubmit","handleLogInSubmit","type","value","email","onChange","handleChange","required","password","id","ref","checkbox","for","href","onClick","showResetPassword","Registration","handleRegistrationSubmit","passwordConfirm","ResetPassword","lazy","Authentication","useState","isResetPasswordVisible","setIsResetPasswordVisible","setEmail","setName","setPassword","setPasswordConfirm","useRef","e","target","closeAuthModal","isLogInTabVisible","handleVisibility","fallback","style","fontSize","hideResetPassword","preventDefault","alert","current","checked","length"],"mappings":"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","file":"static/js/11.d05b434c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nexport default function LogIn(props) {\r\n  const [ t ] = useTranslation()\r\n\r\n  return (\r\n    <div className=\"border-left border-bottom border-right p-2\">\r\n      <form className=\"d-flex flex-column\" name=\"LogIn\" onSubmit={props.handleLogInSubmit}>\r\n        <label className=\"d-flex flex-column\">\r\n          {t('LogIn|1')}\r\n          <input  className=\"px-1\" \r\n                  type=\"email\" \r\n                  name=\"email\" \r\n                  value={props.email} \r\n                  onChange={props.handleChange} \r\n                  required />\r\n        </label>\r\n        <label className=\"d-flex flex-column\">\r\n          {t('LogIn|2')}\r\n          <input  className=\"px-1\" \r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  value={props.password} \r\n                  onChange={props.handleChange} \r\n                  required />\r\n        </label>\r\n        <div className=\"form-check mb-2\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" id=\"autoSizingCheck\" ref={props.checkbox} />\r\n          <label className=\"form-check-label\" for=\"autoSizingCheck\">\r\n            {t('LogIn|3')}\r\n          </label>\r\n        </div> \r\n        <button type=\"submit\" className=\"mt-1\">{t('AuthButtons|1')}</button>\r\n      </form>\r\n      <div className=\"dropdown-divider\"></div>\r\n      <a className=\"dropdown-item badge badge-light\" href=\"/#\" onClick={props.showResetPassword}> \r\n        {t('LogIn|4')}\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nexport default function Registration(props) {\r\n  const [ t ] = useTranslation()\r\n\r\n  return (\r\n    <div className=\"border-left border-bottom border-right p-2\">\r\n      <form className=\"d-flex flex-column\" name=\"Registration\" onSubmit={props.handleRegistrationSubmit} >\r\n        <label className=\"d-flex flex-column\">\r\n          {t('LogIn|1')}\r\n          <input  className=\"px-1\" \r\n                  type=\"email\" \r\n                  name=\"email\" \r\n                  value={props.email} \r\n                  onChange={props.handleChange} \r\n                  required />\r\n        </label>\r\n        <label className=\"d-flex flex-column\">\r\n          {t('Registration|1')}\r\n          <input  className=\"px-1\" \r\n                  type=\"text\" \r\n                  name=\"name\"\r\n                  value={props.name} \r\n                  onChange={props.handleChange} \r\n                  required />\r\n        </label>\r\n        <label className=\"d-flex flex-column\">\r\n          {t('LogIn|2')}\r\n          <input className=\"px-1\" \r\n                 type=\"password\" \r\n                 name=\"password\" \r\n                 value={props.password} \r\n                 onChange={props.handleChange} \r\n                 required />\r\n        </label>\r\n        <label className=\"d-flex flex-column\">\r\n          {t('Registration|2')}\r\n          <input  className=\"px-1\" \r\n                  type=\"password\" \r\n                  name=\"passwordConfirm\"\r\n                  passwordConfirm={props.passwordConfirm} \r\n                  onChange={props.handleChange} \r\n                  required />\r\n        </label>\r\n        <button type=\"submit\" className=\"mt-1\">{t('AuthButtons|2')}</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useRef, Suspense, lazy } from 'react'\r\nimport { DivAuthWrapper, DivAuthButtons } from './styles'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport LogIn from './authentication/LogIn'\r\nimport Registration from './authentication/Registration'\r\nconst ResetPassword = lazy(() => import('./authentication/ResetPassword'))\r\n\r\nexport default function Authentication(props) {\r\n  const [ isResetPasswordVisible, setIsResetPasswordVisible ] = useState(false)\r\n  const [ email, setEmail ] = useState('')\r\n  const [ name, setName ] = useState('')\r\n  const [ password, setPassword ] = useState('')\r\n  const [ passwordConfirm, setPasswordConfirm ] = useState('')\r\n  const checkbox = useRef(null)\r\n\r\n  const [ t ] = useTranslation()\r\n\r\n  function handleChange(e) {\r\n    if (e.target.name === 'email') {\r\n      setEmail(e.target.value)\r\n    } else if (e.target.name === 'name') {\r\n      setName(e.target.value)\r\n    } else if (e.target.name === 'password') {\r\n      setPassword(e.target.value)\r\n    } else if (e.target.name === 'passwordConfirm') {\r\n      setPasswordConfirm(e.target.value)\r\n    }\r\n  }\r\n\r\n  function handleRegistrationSubmit(e) {\r\n    e.preventDefault()\r\n    if (password === passwordConfirm && password.length >= 6) {\r\n      alert(`Your email is: ${email}, \\nyour name is: ${name}, \\nyour password is: ${password}.`)\r\n    } else if (password !== passwordConfirm) {\r\n      alert('Passwords should coincide.')\r\n    } else if (password.length < 6) {\r\n      alert('Password(s) should be 6 characters minimum.')\r\n    }\r\n  }\r\n\r\n  function handleLogInSubmit(e) {\r\n    e.preventDefault()\r\n    alert(`Your email is: ${email}, \\nyour password is: ${password}, \\nyou ${checkbox.current.checked ? 'checked' : 'didn\\'t check'} checkbox.`)\r\n  }\r\n\r\n  function showResetPassword(e) {\r\n    e.preventDefault()\r\n    setIsResetPasswordVisible(true)\r\n  }\r\n\r\n  function hideResetPassword() {\r\n    setIsResetPasswordVisible(false)\r\n  }\r\n\r\n  return (\r\n    <DivAuthWrapper className=\"position-absolute overflow-auto\" id=\"outsideAuthModal\" onClick={props.closeAuthModal}>\r\n      <div className=\"position-absolute mt-5 bg-light animated zoomInRight\" id=\"authModal\">\r\n        {\r\n          !isResetPasswordVisible\r\n          ? (\r\n            <DivAuthButtons>\r\n              <button type=\"button\" \r\n                      name=\"signIn\" \r\n                      className={`btn ${props.isLogInTabVisible ? \"btn-light\" : \"btn-white\"} d-inline-block border-left border-top border-right rounded-0 px-1 shadow-none`} \r\n                      onClick={props.handleVisibility}>{t('AuthButtons|1')}</button>\r\n              <button type=\"button\" \r\n                      name=\"registration\" \r\n                      className={`btn ${props.isLogInTabVisible ? \"btn-white\" : \"btn-light\"} d-inline-block border-left border-top border-right rounded-0 px-1 shadow-none`} \r\n                      onClick={props.handleVisibility}>{t('Authentication|1')}</button>\r\n            </DivAuthButtons>\r\n          )\r\n          : <div className=\"d-flex justify-content-center border-left border-top border-right pt-2\"> \r\n              {t('Authentication|2')}\r\n            </div>\r\n        }\r\n        {\r\n          !isResetPasswordVisible\r\n          ? (\r\n            props.isLogInTabVisible\r\n            ? <LogIn  email={email}\r\n                      password={password}\r\n                      showResetPassword={showResetPassword} \r\n                      handleChange={handleChange} \r\n                      handleLogInSubmit={handleLogInSubmit} \r\n                      checkbox={checkbox} />\r\n            : <Registration email={email} \r\n                            name={name}\r\n                            password={password}\r\n                            passwordConfirm={passwordConfirm} \r\n                            handleChange={handleChange} \r\n                            handleRegistrationSubmit={handleRegistrationSubmit} />\r\n          )\r\n          : <Suspense fallback={ <i className=\"fa fa-cog fa-spin\" style={{fontSize: '24px'}}></i> }>\r\n              <ResetPassword hideResetPassword={hideResetPassword} />\r\n            </Suspense>\r\n        }\r\n      </div>\r\n    </DivAuthWrapper>\r\n  )\r\n}\r\n"],"sourceRoot":""}